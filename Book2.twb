<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20214.22.0108.1039                               -->
<workbook original-version='18.1' source-build='2021.4.3 (20214.22.0108.1039)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='btc_usd_prices_df' inline='true' name='federated.13aaio907rnky41ezgeuy1m8rjb6' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='btc_usd_prices_df' name='textscan.18rhlog00zy4u01h0lnzi0rcf432'>
            <connection class='textscan' directory='E:/' filename='btc_usd_prices_df.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.18rhlog00zy4u01h0lnzi0rcf432' name='btc_usd_prices_df.csv' table='[btc_usd_prices_df#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='datetime' name='time' ordinal='0' />
            <column datatype='real' name='open_price' ordinal='1' />
            <column datatype='real' name='high_price' ordinal='2' />
            <column datatype='real' name='low_price' ordinal='3' />
            <column datatype='real' name='close_price' ordinal='4' />
            <column datatype='real' name='volume' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.18rhlog00zy4u01h0lnzi0rcf432' name='btc_usd_prices_df.csv' table='[btc_usd_prices_df#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='datetime' name='time' ordinal='0' />
            <column datatype='real' name='open_price' ordinal='1' />
            <column datatype='real' name='high_price' ordinal='2' />
            <column datatype='real' name='low_price' ordinal='3' />
            <column datatype='real' name='close_price' ordinal='4' />
            <column datatype='real' name='volume' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[btc_usd_prices_df.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time</remote-name>
            <remote-type>135</remote-type>
            <local-name>[time]</local-name>
            <parent-name>[btc_usd_prices_df.csv]</parent-name>
            <remote-alias>time</remote-alias>
            <ordinal>0</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[btc_usd_prices_df.csv_9D511816055C4D2885D2C06E1800D39C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>open_price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[open_price]</local-name>
            <parent-name>[btc_usd_prices_df.csv]</parent-name>
            <remote-alias>open_price</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[btc_usd_prices_df.csv_9D511816055C4D2885D2C06E1800D39C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>high_price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[high_price]</local-name>
            <parent-name>[btc_usd_prices_df.csv]</parent-name>
            <remote-alias>high_price</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[btc_usd_prices_df.csv_9D511816055C4D2885D2C06E1800D39C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>low_price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[low_price]</local-name>
            <parent-name>[btc_usd_prices_df.csv]</parent-name>
            <remote-alias>low_price</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[btc_usd_prices_df.csv_9D511816055C4D2885D2C06E1800D39C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>close_price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[close_price]</local-name>
            <parent-name>[btc_usd_prices_df.csv]</parent-name>
            <remote-alias>close_price</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[btc_usd_prices_df.csv_9D511816055C4D2885D2C06E1800D39C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>volume</remote-name>
            <remote-type>5</remote-type>
            <local-name>[volume]</local-name>
            <parent-name>[btc_usd_prices_df.csv]</parent-name>
            <remote-alias>volume</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[btc_usd_prices_df.csv_9D511816055C4D2885D2C06E1800D39C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='btc_usd_prices_df.csv' datatype='table' name='[__tableau_internal_object_id__].[btc_usd_prices_df.csv_9D511816055C4D2885D2C06E1800D39C]' role='measure' type='quantitative' />
      <column caption='Close Price' datatype='real' name='[close_price]' role='measure' type='quantitative' />
      <column caption='High Price' datatype='real' name='[high_price]' role='measure' type='quantitative' />
      <column caption='Low Price' datatype='real' name='[low_price]' role='measure' type='quantitative' />
      <column caption='Open Price' datatype='real' name='[open_price]' role='measure' type='quantitative' />
      <column caption='Time' datatype='datetime' name='[time]' role='dimension' type='ordinal' />
      <column caption='Volume' datatype='real' name='[volume]' role='measure' type='quantitative' />
      <column-instance column='[close_price]' derivation='Avg' name='[avg:close_price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[high_price]' derivation='Avg' name='[avg:high_price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[low_price]' derivation='Avg' name='[avg:low_price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[high_price]' derivation='Median' name='[med:high_price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[close_price]' derivation='Sum' name='[sum:close_price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[high_price]' derivation='Sum' name='[sum:high_price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[low_price]' derivation='Sum' name='[sum:low_price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[open_price]' derivation='Sum' name='[sum:open_price:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.13aaio907rnky41ezgeuy1m8rjb6].[avg:close_price:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.13aaio907rnky41ezgeuy1m8rjb6].[sum:close_price:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.13aaio907rnky41ezgeuy1m8rjb6].[sum:open_price:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.13aaio907rnky41ezgeuy1m8rjb6].[avg:low_price:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.13aaio907rnky41ezgeuy1m8rjb6].[sum:low_price:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.13aaio907rnky41ezgeuy1m8rjb6].[avg:high_price:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.13aaio907rnky41ezgeuy1m8rjb6].[med:high_price:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.13aaio907rnky41ezgeuy1m8rjb6].[sum:high_price:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='btc_usd_prices_df.csv' id='btc_usd_prices_df.csv_9D511816055C4D2885D2C06E1800D39C'>
            <properties context=''>
              <relation connection='textscan.18rhlog00zy4u01h0lnzi0rcf432' name='btc_usd_prices_df.csv' table='[btc_usd_prices_df#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='datetime' name='time' ordinal='0' />
                  <column datatype='real' name='open_price' ordinal='1' />
                  <column datatype='real' name='high_price' ordinal='2' />
                  <column datatype='real' name='low_price' ordinal='3' />
                  <column datatype='real' name='close_price' ordinal='4' />
                  <column datatype='real' name='volume' ordinal='5' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 1 (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='btc_usd_prices_df' name='federated.13aaio907rnky41ezgeuy1m8rjb6' />
          </datasources>
          <datasource-dependencies datasource='federated.13aaio907rnky41ezgeuy1m8rjb6'>
            <column-instance column='[close_price]' derivation='Avg' name='[avg:close_price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[high_price]' derivation='Avg' name='[avg:high_price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[low_price]' derivation='Avg' name='[avg:low_price:qk]' pivot='key' type='quantitative' />
            <column caption='Close Price' datatype='real' name='[close_price]' role='measure' type='quantitative' />
            <column caption='High Price' datatype='real' name='[high_price]' role='measure' type='quantitative' />
            <column caption='Low Price' datatype='real' name='[low_price]' role='measure' type='quantitative' />
            <column-instance column='[low_price]' derivation='Sum' name='[sum:low_price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[time]' derivation='Day-Trunc' name='[tdy:time:qk]' pivot='key' type='quantitative' />
            <column caption='Time' datatype='datetime' name='[time]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.13aaio907rnky41ezgeuy1m8rjb6].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.13aaio907rnky41ezgeuy1m8rjb6].[avg:high_price:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.13aaio907rnky41ezgeuy1m8rjb6].[avg:low_price:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.13aaio907rnky41ezgeuy1m8rjb6].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.13aaio907rnky41ezgeuy1m8rjb6].[avg:high_price:qk]&quot;</bucket>
              <bucket>&quot;[federated.13aaio907rnky41ezgeuy1m8rjb6].[sum:low_price:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.13aaio907rnky41ezgeuy1m8rjb6].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.13aaio907rnky41ezgeuy1m8rjb6].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ffbe7d' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.13aaio907rnky41ezgeuy1m8rjb6].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.13aaio907rnky41ezgeuy1m8rjb6].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ffbe7d' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.13aaio907rnky41ezgeuy1m8rjb6].[avg:close_price:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.13aaio907rnky41ezgeuy1m8rjb6].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ffbe7d' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.13aaio907rnky41ezgeuy1m8rjb6].[Multiple Values] + [federated.13aaio907rnky41ezgeuy1m8rjb6].[avg:close_price:qk])</rows>
        <cols>[federated.13aaio907rnky41ezgeuy1m8rjb6].[tdy:time:qk]</cols>
      </table>
      <simple-id uuid='{E9391B06-EDF1-4AE5-9EBF-37641BDBA608}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='btc_usd_prices_df' name='federated.13aaio907rnky41ezgeuy1m8rjb6' />
          </datasources>
          <datasource-dependencies datasource='federated.13aaio907rnky41ezgeuy1m8rjb6'>
            <column-instance column='[volume]' derivation='Avg' name='[avg:volume:qk]' pivot='key' type='quantitative' />
            <column caption='Time' datatype='datetime' name='[time]' role='dimension' type='ordinal' />
            <column caption='Volume' datatype='real' name='[volume]' role='measure' type='quantitative' />
            <column-instance column='[time]' derivation='Weekday' name='[wd:time:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.13aaio907rnky41ezgeuy1m8rjb6].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <slices>
            <column>[federated.13aaio907rnky41ezgeuy1m8rjb6].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
          </pane>
        </panes>
        <rows>[federated.13aaio907rnky41ezgeuy1m8rjb6].[avg:volume:qk]</rows>
        <cols>[federated.13aaio907rnky41ezgeuy1m8rjb6].[wd:time:ok]</cols>
      </table>
      <simple-id uuid='{58506D1B-0D36-4114-AFF8-6E7C918B8EAB}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Sheet 1 (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.13aaio907rnky41ezgeuy1m8rjb6].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.13aaio907rnky41ezgeuy1m8rjb6].[:Measure Names]</field>
            <field>[federated.13aaio907rnky41ezgeuy1m8rjb6].[dy:time:ok]</field>
            <field>[federated.13aaio907rnky41ezgeuy1m8rjb6].[wd:time:ok]</field>
            <field>[federated.13aaio907rnky41ezgeuy1m8rjb6].[yr:time:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DC518B06-5BD1-42DC-9B6B-11CA49B9F4A5}' />
    </window>
    <window class='worksheet' maximized='true' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.13aaio907rnky41ezgeuy1m8rjb6].[wd:time:ok]</field>
            <field>[federated.13aaio907rnky41ezgeuy1m8rjb6].[yr:time:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8905DCC6-0E77-4958-8BBD-A6FD5887C8BD}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1 (2)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO2deXgdV3n/P7PcfdN2r/bNsmXL+xY7thPH2UMWkkBIgBAoJUAKBQItv5LS
      0LAEWlq2QmlToKVlCWQlZIHsiR3Hie3Y8SJLliXL2nfp6u7LzJzfHwpyjCXbV9bmaD7PkyfW
      vTPvvDP3fOec8573nCMJIQQmJnMUeaYdMDGZSdQ//SMcDjMZlUE8HsfhcJy1HROT6WBUAB6P
      Z9KMer3eSbNlYjKVqKc/5DjR0CAtbW0MxyVcSpq4LlMS8GKxuYikJOaV5k+VnyYmU4KUaSe4
      q6UJe04efb3DOEiR0BO0dkfZcuE6MAzC4TBut3uq/DUxmVQyqgFAMBzXKHB7aG9qJKgrlPi9
      rKjJ52hLJwsqipFlGVXN0KyJyRQidA0j2ILetQ/LkhuRJGn0u4xrgNMRCoXMPoDJrCL+9D8g
      gq0ILYHzA/cjycrod2YY1OScQAiBEepACCOz8wwdY6gZx3vuQ7K5IRk+4XtTACbnBukYsfs/
      SHLbdzM6TYS7kexZpDt6kHPnow80IoSB1voaem9dpn0AE5OZQe+tQ626BL19N0JPIymWMzuv
      rw4j6abnq1/H/4nN6K07MIaaSe9/EDl3nlkDmJwb6G2vo5RvQHJkI2ID4x8oxAnNJKPnELF9
      naj5AYS9BmPgKHrbThzv/iEi1GUKwGT2I/Q0euvryHnLUPKXoHcfQBgGxtCxk7IXtLadxB/6
      GCIRIrnrZ+i9dRi6D9cFFxB5bhua/Wrsl38ToVsRhmY2gUxmL/pAI7KvDK3lFXAW0PO1f8X/
      1zeiH3sRyeYh/vidOK7+NnLufES0D7lgOdrhJ5G8RcQe/AuMYCtYfGA9H/vSJQw/8CDp7m6i
      L76M0NL4zrOYAjCZnQhhkPjDXYhUBNlbBMW3oPX+Am3YhtFzEGPwKPYr7yW57XugqEiKDaVy
      M3pvHc5bfoHW8AzICrFnfowaKMRSUkLe5z+HZLEie9wM/d8vECJqCsBklpKOI1nsOG/6Kdi8
      BH/1azxXXkF87wFcizaih9MM/noH3jVVWJbdhFKwjMQf78K25R8w4mksi9+NEAK5xcASN5BU
      FceqVaPmrRUVaMNdmQkgFR3k4JEOikuK6es4RvytkWCL3UUoIcxcIJNJwwi2IflKEZId4nGS
      9YcJ3PV39H7zn/C974ukd+8m2fBz1Nu/gZztZ/j3T2Ff8lckW4KEHrsX+5IlaD096OEwuXfc
      cZJ9a9U80q0is5Hg1vqDDBgyVgQWm2dGcoFEbAC9pxYUC2rZ+YB02nNMzj20usfQu1oYfqYb
      x/p1IMt4rn830WefI3noEEYkilpchBoIoPh8xHfvRu/rQ7JasVRWIvt8WEqKSdUfxvvBD5xk
      Xx8KMvSf/5lZDZCXn0t3cx8Wh43EcB9DhkyJ38uyhXkcbe1iQXnRpOUCCS0JWhIj2ovRdxjL
      omswogMknvl75Kwy9O4DWDz5KP7qs76WyexC6GlSh58i0VmK4vUSf3UHBfd+HVlV8V51JcmS
      ElJHj+K6aDP9P/p3LIVFeK++Gsmikmpswn3lFcfzfdatG/MaSl4usixnngtkGMaoccGJ719J
      kiYtFyj56g/RjjyHEDqS1YVt/R0kd/w71nUfR11wBXrzy6T2P4Btw6dR8pec9fVMZgfpI8+h
      d70JQib4xwEC/3g3Ih5Hyc4e8/jBn/6MVNNR/F++CyXDlkfsjT2ZjwPIsowkSUiShPzW///0
      32Ri9DfguOHHuD70EJIjh+S27+B4z32ket2EHn4EpXwTcnYF6QMPT+p1TWYOfegYqdd+DHoK
      8i7HUl6OZLONW/gB3JdegpKbg+xyZXw955rVs28gzIgOkNz1M4xIL/EDzaRaOlHnXYRl2U3I
      jhzie/YSeXkrRjSOZdn7EH+W3GRybiGEGElYC3WSev0+bJu/iH3LXST2HcRx3prTvlitlZXk
      feHzE34Bz6owqBAGiaf/HmOgCclTQOiJJ0E3CPzDl1F8XrT+frSeHlybNpKoPYRjxQJEcnim
      3TY5C1I7f4IxcAStZQeKfxHBR3eSffsyko1NeK699oxsSPLE3+OzqgbQ23YhuXKxrv8EQnej
      5uTgvuxSolu3ItJpeu/9Fu7LLsG+dAnJ2loStU2I5ORM5jeZfoQQ6C3bkZx5uN7/K0TgRuJv
      7iO6dSvIErJn6mcWzhoBCCFIH3gQdd51pIfzETlXYFu0COeG84nt3k3iwEEcK1fgvvhiLBUV
      RF/ZzvDDv0OSVdDiM+2+yYQQCC2J9bxPE37xDcJ/3EHOJz5O6OFHcaxYMen9yrGYPU2gdAxj
      qI3BXz+DPjCE5HSQ99nPoHi9WAoKGPrlr8i5/S8BkJ1OnJs2kmpqAtWJSEWRLM4ZvoF3Lnr3
      AZBVZP+iSS2UItyD5Myl79vfwb5yBYF7voJksWCtKEctLJy065yKWVMDGEPHSEcKsFRU4rvl
      fVjyC7AUFQHge+97yPnYR7HV1AAjbb7cj9+OZLWC6jA7wlOIEekl8fzXiD/1/yAdm1zbA40I
      spCcDnw33oBstSJJEpaioml5+8MsEoAcWIzOYlwbNuDcsIHcz3x69Ds1EMC+ZMlJD0VSVCRb
      Dsln78GI9k+3y+9ohBAYsUFSu36KZcWHkbPKEYnJDTjoXfvQYy6sFRWTajcTMmoC6eFudtT1
      ML+ylMHuVuK6QrHfi9XhYjimU1lydrlA+sAgakH+SK/+THr2ioJl1QfQj/werfF5rCtuOavr
      zxWMaB+pN36OWnUpavHqk74XwkA79HuS2/8NyZFNaAfY88KI+BB4iybFB2Ho6G070ZObsC2f
      Pyk2J0JGAkgLC16HQijYj+rMIUCKcDRMa1M3Wy5ch67rGIaBpmmZeyIERiKBoaqIMzxfstnQ
      hQN52c0kH/kYwuZBmX9F5teeQ4hQJ+nn7kYq20Ry67+ir/koSuUW9OaXQLWjlG1AP/Q7tKMv
      Yr3x5yT27ibxh0ewbnahDXchchdOih9G934MVBKHW3C95/0TKzOTQEYCMCQZl9NONJGG1AAh
      IVGQ62HJ/ByOtfdQVVow4VwgoetgGKh2+xnHdRWPGymRINXQhv2Kb5Pa/Z/YFl2d8bXnCkIY
      xF/4Ktb1n0RYKzFyNqC98U1Ex+6RySMAvQfQj23Hsu7vGfjnH2GtXoBz4wagCSnWe9JvK9Jx
      RCI0UjvoKZTC5af2QUtiDDaRfvlbGK7rcKx2YPX5puiOT09GJdXhzqJItWO12cHQ0IWEqkhI
      koyuZ7ZcxZ+jDw2hZPkyGtSQXS603l6G/u8X5N35WUS0H2FoI6HROY4wdNJ7foHeV4+64HLU
      eVveej4Gg/dvQ+//HbLHTc5tnyb53N1Ii+9GpAzk6A6knCqGH3qK7L/8KPbFNUReepl0fTci
      0nPiNVJRYg99DPTUyAtMknC++wfI2eXj+pXa+0vSBx7CftU3GfrNS2TdcvMUP4lTk1FJkSTp
      +MrPsgXlbd+pqjLmOWeK1teP4vdndI7schF7fRdKVhaJQ3VYLU5IRcE+c2+UmUQIAUIfaU72
      1aO1vYZtw6dJ7f0lescbyN4itHA2SnY2OR/7SyLPv0Do+TqybvgpfT/6P2SHE9eWy1A8Lqh9
      EVvNIgBkjxuBi3TD06DYsK7/JOgpEs99DXXBNRhyDdFXtyGnDmFt3YH1FAIwBhqh4EMM/eYl
      tN4+1KLJ6VNMlFnzqlT9flwXXpDRObLLRXz3bvLu/Byhx5/Atr4QI9SJMkcFYAw0kXj6LlCs
      iNggtgu+gOSbj/2qb5F48m9INT5Pqm8jvlsuR/X78d38PoL3/4a+f/tfbPOr8F5/Pb3/9M8g
      SeR+6o7RqJvi8SDwYFl8PSLSS/LFb2L0N6DOv5zgMx0o3ghCk0gPOdDbdsLyW2CMMKYQAhHq
      IrLPwHPtDSDEtIU7x2P2CCAvFzUvN6NzZJcLJTcX+5LFDD/8MErBSuK//yzO9/0c2Vc8RZ7O
      ToQwSO38CZYlN6IFJaREM7EDg0R++CWyP3wbtk13oh/bQeTBg1jeCjtKskzW+28hWVeHraYG
      SZYp+Na9YIxMIfwTssuFSAvIuRSDAeTkK9guvRs95kCyPEDOp+4AXafnK1/BGDqC0FMgK4hk
      GNnx9kxOgUhGARXn+vVnlcMzWcwaAUwEJS8X16aNSBYLSnY2csFm1KpGjFDHHBOAIPXqj5Cs
      LqT8ixm67xvYV60k3X4I/xf/luD99yOSG7EtuAQlu+OEMyVFwb506fG/JemkELRkd2BEowR/
      +wAiFse+YjnCFydxYCeuizaPnKOqqEXF6MlO9K59pPf+Er37AM5bHwABkisXkQihDUVQ8wtm
      ReGHWTQQNhHsCxfie8+NIElYSktJtbcjZ5UiQh2nP/kdhN5bj959ANuWLxH63WNkffg24jt3
      4b36XVjLSsm94w7CTz9L3/e+h616QcbNDtlhJ93SgpKdjW3pyOSj4YcfJrFvH44VK0ePUwMB
      cNeQ+MOXkP2LsSy7mcSTf0vs/vej1T9JatfPMNJeLMWz5+V0TtcAb29nWkpLSbe2YV1ejN5T
      i9A1JOXcvr0xEWIk0vW2pQHT9U9hWfFBott3oA0M4Dx/PZbCQiylJQAoPi/5X7sHvb8feQLz
      tSW7HaEbuDZtwrFqpMAnDhwkdewYkvW4H2oggBFSsK1aQeilVhxL8jEGm3C856fEf3cHSukG
      0vGleN9KaZkNnNM1wNux1ywivms3esJK+vBTxH71XkQyMtNuTSpCCOLPfoXYL99Lcut3Rj8z
      ut4k/PJhknX1+D9/J5IkYa0oR1KOR+YkSUL1+5EnsH+bJMu4LrxgNCoEYFu6BM+115xwnOr3
      owejSLlrie/cRbpXx3HTzxFyHpbVn8RwXIKlrOIEOzNNxgLQtRSptE46lSCeSKLr2kgqczo9
      Ff6dMUpWFp7rriG6401EtA8pq4z0wYdGvxeGPqF5A0IItGOvkG54ekbnHQhDxxg8igh3Ybvm
      J2gdu0cGoSLdoNhIHesk+yMfntDUwDMh+7YPIdvto3+PNQ1W9fvRevuI7dqN65KLie14nf5/
      /zV9//pdYnU6sZ37cF9yyYxHft7OuG2EPa8+j+QtxOPKYn7lW7FaIWg8sJOUdx4i3IsmJAI5
      biTFiqY6KS/ILIoz2ThWrCD8xOM4Nl2Gdd3HSL3247cKrSD5wtdBtmC76O8yahoZPQdJvfaf
      CARyVhlKYHqrb2HopHb9BKOvAa1tJ5aVt9P9D18l59oK9J6D6G07kXLOQ/GGTyigM4GSnYU+
      HCSxfz/ZH7qV5MFarJXzRu6hqQklOxtL8czG/f+ccUvC4FCQlkONLF57MX9KVeptO8JQHNLp
      HvJzc0fWBUrGaenuY8sF688uF2gysFqRs3KQVt6K8OVihDrRhlpJ/eGLSO58QJDurUf2H6+C
      RbQfZAXJMfbE69Su/0FefQdGLE3ixW9iu/4/QJ2+gqbt+/XIKsbV78K67m9INRxFRF9ESy1B
      7PklhDrRCz6OZUEcTdenza/xkBwO9KEgkt9P7j1fOaEZBswKH9/OuAIIBPKJpFWK8vNGP8st
      nocvK4tjQwZGuIe+t7JB164oobmtk/nlM79HmOJ2I6dTqBYraZcf4/ATqJUXYl37UbSjL2O0
      vIJaOBL2E0KQeOleJHcA+6V3j9oQQoCWAFlFDHcQeuQVjFicrMtXI5qex7Lk+mm7n3T3Pmwb
      PoNhuOn7p39G6x/Ae+MNxPftxVlUj23D7SRePYb7sktmxd5s/s/fidbdjWq1zrQrZ8S4fYCC
      kkpWLq+ms6Nr9DNFUbF5AywsL2DR0hWsXrGU/KIyfL4s5pfPjtCW7HCQbm1j+NHfoVZfMZL2
      W7kZyepGKV2HdmwbIh1Ha30N7fBTAOi9h0gdfGR0XXmt8Vliv7oZvXs/RloBQ2ApKEAXi0gf
      +h3COLu8pzNFCIGI9CJ58om+sh33lVfgWLMa9+WX4dx0IcnIBtQFV5Nub8dSWjotPp0O2eHA
      Wlk5026cMWMKwDAMWo82cLC2idKK2fFgzxTJ6STd3kF8zx7U+Zejlm9Czl1AfP9+hn75O5Ti
      DSS3/guJ579Oas8vSOvrEb5r0RqfQzv8B0Q6TmrXz7CefweJP/49RsKGpbgE3/tuIvz0qwjJ
      hdFzcNzrCyEmr7OspxBCB9U+Mid67VryPvPXKB4P7ssuRfaW0HPPN5A9npHZcSYZM6YA6t98
      jab2XqKxKJFwdLp9OitkhwNtcAC9fwBkC47rvk/qaBuhhx/BGB5Gyr8MERvAuuYvUNd9g+iO
      A8QOdGK/5G7S+34zMgnE6kZdeDWSMwc9bsNSUoTq92NfugRDWkRy+/fHnYGWevVHaHVPjP59
      VqtWpGNIqpPgr+5Hyc5Cycoa/UqSZXI+fjsF37qXvDs/O6siK+cSYwpg8eqNFOU4iUWGCMdn
      NryZKbLTgd7Xjx4Mku7oRGga0VdewXfzzTjWrSV55Cj2q7+DWn0tQz//X/I+9xlEKonWH0dd
      8wW0xucQShY9/3A3yqJPIOyLUItGmnf25ctJB52oi64juf37b00bHEDvPYQQBsZQC9rRF0nt
      ux+hpxGpGLEHPoLevBUj1DmSI5MBRnwIZCfJ+npy7/jkmIVckmVkm21Snt1cRLnnnnvu+fMP
      hRD0Dw6RjIVxegOUFuaNcerYJJNJbDP4g6S7e4i9vhORTBLbsQNreTmxHa/he++NyDYb0Zdf
      xnHeecReeRXZ68W1YQOW4iL6v/8DkoePYs3qwEgXYhh5xPfUofUN4XnXVcgOB7LbRfC3D6BH
      bahSLSI2MPLGb3oRECRf+S5S2ftAAzFUi969H2Qr6Td/gdbwR0QihJK/BKP/COn9DyC7A0iO
      rHHvxeh8k8TBvciBlThXnzx10eTsGbsJtO912jp78JcvZe2Kc2v1ZdnpQB8cxFJUhBGNkti/
      H9Wfh2SxoBYWYsTi9H71a0Re3or7sksBsFVVUfgv30aSLUjucrSQgnPjBvK+8Hn8f/OF0bUp
      ZaeTgnu/jtbVg2X9F0HoON79b9gvu4fk1u9C1nqG/3CA0LYw6ZYDpGqfZnibDsW3YXvXf6I1
      PU/s/g+QfPVHAKR2/fe49yGSYZI77iNxTMK+ZPGUP7e5yphxs6pFy9CEwsEDe5DtXjauqJpu
      vyaM7HCCYeDceD4iniC6dRuea0amSUqKQtYt7yNZV4/n3dcdP0mSkO121KIilJorMTq3Y62o
      QM09eWBPdjhwbtxAvLYN79WfBEC4/CiBhcQadbI+8H6MWJTEvn3oA7041q0g+OiTyM8exLVi
      MbblWwg9uxepOYWrvJ/Yo3+F/ZK/R/YdDzZoLa+S3vcbYo0ytjVX4DDf/lPGmAJob2nGnlXA
      TR9cjeUsZ3pNN5LTAZKEY+UqZKeD0JNPYa04PkPJVl2NrXrsWs22aCGJuha0vkHUgoJxr+FY
      u5bB++7DtWkj/d//N1ybL8Rx5Q8IfecHI29rSSJ1tBlb9UJcF2/BfdlloGv03vstEse2k3Xb
      h0i8uY9Uugj3xsqRNXe0FErBUqxrP0rq9fsg5zz0pIvca645aTDJZPIYUwDzFi4d62OEEKSS
      yZFBDmFgCFDeWi7dMAyUWfBDyXYHyDKS04GSnY3i857xtDvHmtV0f+kunOeff8pCp+RkI1Ip
      EocOofr9RJ5/AZFMYq9ZNDqRJPvWDx4/3j2Sn5P3uc+gZGUhu1xYy8vp/94PGKhvwH3J7RjR
      ECLWhvHM3Yh0itDTrfhuvnlCyWsmZ05my6LEI7R19RCNp5DSCVKGREGeF8ViJyGsVBZnNqd3
      KpAsKpLViuxwIFmtZN122ynXl387ittN1vtvGbeGGL2GJGFbtIjI08/iungLzo3n0/ev3yXw
      5btOed7b8+AliwX///tb0p2dRF58CcliIb6nC3dVFC0ksC9divO8tWfkt8nEyUgAVqcHI34E
      VXVhceSRTYp4Mk5rSx9bLpwFuUCAIUlIdhuG1YrQNGznrUU3DDjD0Vvb+ecDnPYeLEsWE3rs
      93hvuxVLeTneG65HqajI+N6lQADPWysjSD4f8W0tGMMRvNeun9HnOFfISACx0CBp2Y4hQIsO
      0qPLlPh9rF5aRHPr7MgFMiwWJFXFYrONOTF7spAXLEDJzcUaCKCoKlk3vfesbXouvACjvx9L
      SQmO6mpzcGsayHiPsNMxWXuETRQhBMnDDdgXTc4KZqci3d2Nmp9vFtRzmHecAExMMuEdMyXS
      xGQimAIwmdOYAjCZ05gCMJnTmAIwmdOYAjCZ05gCMJnTZDRkm4yFaGxuQxMyUipKXJcpCfhQ
      bU4iaZmq0rPbI8zEZLrJSAA2hweXTcHq9hGJusgmRWyW5QKZmGRCRgIY6myidSDKPHcOqXAX
      w7pMccDHisX5HG3pZEHFzOcCmZhkgpkKYTKnMTvBJnMaUwAmcxpTACZzGlMAJnMaUwAmcxpT
      ACZzGlMAJnOajAUQCYcwBMTCQfqHQqSSCXTDIBqLTYV/JiZTSkZDtloyyr59+1i9bgNNxzqQ
      JYO424FuyNh8ebicU+WmicnUkJEAVJuL4vw8EBo2hxu7lCaZStDeG2VDWYWZC2RyzpFZNmg0
      RHffAJotC1mPEtQUiv25FBZX0tXVQ0VpoZkLZHJOYeYCmcxpzCiQyZzGFIDJnMYUgMmcxhSA
      yZxmwgJIJePE4kl0TcMQglTq3NpN0sQEMgyDjiJ06usb0AX4s90gWzAsbsoKcibZPROTqWVi
      NYCRwu7KJs/jIpGMc7i5k+LAme3CYmIym5iYAGQ7RiJIXySJ1+3jvBU1HGvrnGTXTEymHnMg
      zGROM9oHCIfDTIYWotHoWdswMZkuRgXg8XhOe3A0NEhrRw+q3YVbNYjqCvnZbmxOF0PBCPn+
      kU6wWQOYnCtk3ASKh/rpHk6SjCWxyWmQBYOhJNU1i3FaZMLhMG63e6r8NTGZVDIOg7Z39VFZ
      NY8jTe0IAbIkocgSmqaj2C1mNqjJrEMIMe5GhhlGgQQ5eQFU1UaO2wI2N3l5+SxZsoR0PDIJ
      rpqYTD4PvVzHse7gmN9l+KqWyM3NBSC/uOyEbwL+vAk5Z2IylQgBr9W2kUrrVBRknfS9mQtk
      8o4mnkyT0gwOHO0ZM8ppCsDkHU33YISqomyy3HaOdQ8DkNJ0dtZ1AKYATM4RNM3g/57eh5Hh
      WFVz1xCVhVlsWVXB/c8doKlzkGd3NXHf798ATAGYnCNs3d/C49sbONoxlNF5R9oHWVCSy5rq
      QmrK8/jBg6/z8pstOO0WkmltgtmgJibTSDKl8fTOJj5+3Wq27W9lfkkOIxXByeHNUDRJQ/sA
      a6qLkCRo6w1R4vdiURVu3FxDttdBid/Lo1vr6Q/GzBrAZHZjGIJHt9WzbF6ALSsrqD3WS1rT
      2d/UzfcffO2kju2O2jZ+8NDrPPXaESLxFJpu4HZaR7/fsrKC+cU5BLKd9AajZg1gMnvZuq+F
      9r4QPYNRPnXjWqwWhYIcN1v3tfLUa0cwhKAvGOORrXWkNYNrNy7gjcNdfOmDm3j+jWa27mth
      WVUAeYxBsPwcN92DGQrASMc5VN+Ev7CEyGAnMU2lKM+DzelmMBSnrCgwaTdvMrdJpXUeeukQ
      /iwXf/v+DdgsI0X18rXzeOjlOj5x3Wpqj/XxxI4GhsJxVlcXcv/zBwnFkiwqy2NeUTY/fGQn
      791cM6b9whw3u+o7M8sF6miopTsFOW4naU3GLqVI6Uk6+mJsOH8tCsLMBTKZFI60D/L0rib+
      +sbzxj2mcyDM1/53GzddVMNFK8v5zA/+yG1XLGPT0tLT2k+kNO75+dbMagCX20EWPmJDnRhC
      QcfA7bZTVuigbzBMsd835blAhiH4yRNvcNW6+ZSPMbJncu4jBLxe18m6mpJTlqXSQBZep43F
      FQEcNiv/+BcXUZznRZbHzvt5Oy5lpDmVUUnNKppHsqONgnkLIRUhpiv4nFYUq514bHLnATR2
      DOJxWHE7rbjsI52YlKbz0yf2sKuuk+qSXFMA71DCsSSHjvXxwcuWnfI4SZL42DWrKMgdaXGU
      BnxnfA1Jkrj18mWzd0bYf/3+DfqCUToHInz3r6/AZlHZ19jNi3uPsWFJCa8f6iCWTPOlWy+Y
      BK9NZhNPvXaEVFrnhgsXTfm1ZmUUSIiRIexDLX04rCodfWG27muhpWeYq9ZVURrw8b0HXyPP
      58QwxBlVeSazn6bOQV54o5mGtkG++IGN03LNWSkAQxgMR5Pc89EtHO0cYnd9J68f6qB/OMad
      N60fiQgIiCbSpHUdmzwrb8MkA3TD4CeP7+HSNZV4nDb8WdOz2cSsKzn7m3ooDXixWhQWleXh
      9zm567+eZ+2iIi5bMw+vy4YQML8kh3hSQ9MMbJaZ9tpkorR0B/Fnu9hZ10FBjpvL1swbd/LK
      VDCrBNAfjPGjR3aS5bGT43EAkOtzcteHLsBuVSnMHZm3LElwz0e38K1fvUIipeFyWE9l1mSW
      IoTgZ0/uJaXpOO0WPvve9dNa+GEWCUAIwWPbD3Pr5ctQFZl46vguM5WFJy+6pSoyPpeN4WiS
      XJ+5N9O5SiSRYuX8At6zuQb3DLzIZo0AugYjNHYM8pGrVqAqZ5ailOW2E4wkptgzkwderGXL
      ygoC2a5JtTsQipPttnPbFcun/c3/J2ZNMpzXaePOm9afceEH8LnsDEdNAUwlDW0D3P/8QTr7
      w5Nuu7FjkKqinBkr/JBhDSASQXYfaqO0tIT4cM+JuUDDMUoK/RN2xO2wZlwFZrltDIZNAUyE
      U62U8PZjntnVxLqaYgZC8Un3oba5l1ULCifdbiZkJIB4LAYyaOkYaRy4LSkGB/vpaGhl3bo1
      075LZH62k+0H2rhkVTkuuxkKOlM6+sP89oVDfPa9541Z4+qGoHcoyo8e3U08mebGCxfSG4xO
      6u+qG4K6ln7ef8mSGd1VNCMBSDYPy2pyqa8/hKo6EJKOw2mjOGAlGIpSkOOZ1mckvEsAABTW
      SURBVHWBFpb50Y06PvmdJ7n7IxexpGLiNdBcYSic4HevNNA/HOOlfa1ctW4+KU0nkdTwumwA
      PPpiLU/vauI9m2tGUpBzPTS0D07q79rbHybLbcflsE2azYkw7h0d2rsD4crD48qmrHhkyRO7
      3U5TUzMLFi5FjwWJ6grZbjsWm4NoZPLbiKdDkiTufN/5tPYM89i2ehaX581oe3K2YwjB9x7Y
      QWGumy/degHf/OU2zltUxO76Lh7ZWsdnb1rH4nI/B5t7+adPXkau14EkSXQOhBmOJMe1G44l
      Sab10eNPh6YbbD/YxoYlJZN5exNiXAF0dvUSTrThL10yKgBJsTC/unrkALuft2f8zNR6oB6n
      jerSXIKRBEKMjBGYQDKt8dRrjdSU55HrdeDPctE7FEWWJe64fi2SJHH52nnc/dMXsVlVPnzV
      Cn7zfC2bV5QTT2lke+yjhdnjsBKJp066Rjyp8fM/7KWpc4hkSuOGC2u4dE3lKf06cLSHnz6x
      l3Asyfc+c+WU3HsmjCuAkvIKDCFwZudPpz8TQlVkkEAzDKyyMtPuzAqau4I8vv0wL+5pJs/n
      5MsfvpDd9Z2sqykeLdhXrptPWb6P/35yL+cvLmZZZYB/f3QX62tKUOTjfQOn3UI0kaa2uZeU
      ZrBqQQEAv33hIIFsF5949xo6+yP86tn9pxXAjoPtfPRdK8nzOfG57FP3AM6QcQXQdqwZm8uN
      S/JQUTy7V32TJIkcj4OhUJz8nLk7GUfTDV6rbae9P8TRziE++q6VXLC8jB8+spO9R7ppaB/g
      PX82Q6qm3M+9n7gURZbxumzc9aGTs2sVWWblggK+9+Br+H1OVlTlo+kGB5t7+ebHR84tzHXT
      PxwjrelY1LFfQkIIOvpDVBYuweee+cIP44wDDAcHqVm6Am92gKqymQ1TnSl5PieH2wbGrKrn
      Cofb+nls+2HsFpWu/jCLK/xIksR7Ntfw6NZ6OvrCFOWdvAy+dZwC+3Y+dPkyfvz5a8jPcXPn
      D//IL5/dT2VhNlbLyLmqIlNRkEVT5/jLlgggltRwzqKI3ZgCiEXC7H3zTWLRCNFzpED5s5z8
      1+NvsG1/60y7Mu1ousF/P7mX375Qy3svquGGCxfxr5+6ghzvSD5VcZ6HsnwfDpt6RoV9LCRJ
      wmpR+Ksb1vL5m88nntT48JXLTzhmYVkeDW0D9A5F+ckTe+jsDxOJp+geHFk4ORpPYbUoGQ12
      TjVjNoEKS8qJP/sETbEUucXzptunCZHncxGOpejoC820K9POtn0t9A3H6B2Ksrh8JBRssx7/
      aSVJ4kOXL6Nr8OxX8LZZVCoLs/n0GHN1F5Xl8pvnDzIYijMUjvPs7iZcdiv7mnr44vs38tWf
      v8SKqoJZFakbUwCtDfuRvQVccenV5Gc5ptunCVGW7+XKdVX0Bt/ZWzSlNJ39jT2sWVg4WpAa
      2ge4bmM11aW5475dXQ4r84undhvbwlwPbb0h2vvCfOUvLuKrP38JCQm3w8r3H3qNi1dVcu3G
      6in1IVPGfFrN7T2sXlbDGztfIxSd/CHwqaA04OPj164mGE5kvH7kuYIQgvse282PHt1JKq2P
      ftbWG6I04J3xpoUiS9x+7WrOqykix2Pnb27ewFXrqvjCzedTWZDFxasrZtS/sRizBphXXsqx
      zj48DpVQJIHXdbwW6G9vImbJhWgvUW0kR9/mcjMYjFBcMLMjsRZVwWpRGBiOMRCKs6js7KNX
      QgjSujHhtvNkEowk6RyIsLq6kJaeYapLczGEIJHScM6CWUGSJLG8Kp/lVSOh8/KCrNGFC267
      csVMujYuYwqgtGoRBSVlxFMGdsfxXHsjFaV/cBjhtiDrVpxymoHBXroaWlizdtW05wKNhd/n
      5LFX6jnSPsi9t1981vb6h+N85b9f4iNXrWB9TdEkeJg5AmhoG2R/Uw+rF+ST5bZz8GgP8wp9
      HGrpJ9frQAgDTTNmxL9zmXHHAZ7/w+N4S+YhaRY2nL8SgP6+fnQ9TW/vAAGvk6SkY3fYCOSo
      hKNxAlnuGd8j7LyaYr77wA68ThuSLKPIMn94vZFgOM4HTrPMxlg8s/so121ayMMv17GsKh+v
      c/pzV9r7Qvzg4ddZU13ErZcvI5nW+PavX+Xy86r43z/u44vv32TuyzZBxn1qxSUl7K2tZfNV
      N45+FiguJ5BfQGlSoMeDRDWFXK8Di81JODw7oi+LK/x4HDbyfE6i8TSqKvPMziYURWJhWR7L
      q/JPaCunNR1JksZsPwshqG3u4+6PbMZps3D/cwf5xHWrpzWKcbhtgIa2Aa5YW8VNWxYDI6nj
      K+bn88+/3s7yqoLRdXFMMmfcXpOwusnPchIc/LPNxVQbXped7LwCSgr8OJxuVEUmO2t2LFLl
      c9n4l7+6nPklOTy5o4Ha5j6qS3Mo9nv5zm93cKR9YPTYzv4wf3ffc3z719tJpo832/60VFI8
      qSHLEi67hYtXVdDZH6JrYHo3A3xsWz2/enY/1aW5J3x+05bFlOf7uGpd1bT6805j3Bog2N1C
      Xnk1MudWu1KSJPKynCwoyeUXT+9jZ10n12xYwAXLy6hd3su2fa0sKsvjlf2tPLv7KLdetpy6
      lj5e2NPMhcvLcdotfPe3O6goyGLDkhKy3SNJYZIEK+cXcLi1f8zR1KlACEHPUBSX3cq8ohPn
      RVtVhY9ft2Za/HgnM34NgERrcxOScm62LbesLOfLt11IS0+Q+cU52K0qy+bl09gxSCSe4sGX
      D7F+cQmrFhTw7k0L+c3ztfzL/dtJJDV6g1H2N/WwdX8rhW8r7IvK8zjU0kc8mZ6We4gnNawW
      hf/4wjXmhJ8p4hSBYxmXw37O5hdLkkR5QRYrFxSMJshZLQpLKgP89oVa5hfncPX585FlCY/T
      yo+/cDWxRJr+4Rg5HgcfuWoFj796mOK3CaA04GNPQzdf/skLJJIjTaaWnmEONvcCI4s7vfzm
      MZo6BoGRQatkauIRsVA0iddpw2pRZtXo6TsJ5Z577rnnzz9sO1pPKKEjySrFpaUnjAOcjmQy
      ic02s7N8/oQsS2xeUX5CdmJRrodndx/l8rVVo00ZSZKwqgqvHWrHZlFQFJktqyqoLs1jYWku
      jrdi7BZV5sLl5UiSRF1LHzleBy/uaaaupZ+acj/f+L9t9A3H2H6wjS0rK/ifp97k188dJBRN
      8PKbLaxdVISmG7xxuIs9R7qpLhl/QrgQgj0NXRhCsGJ+wdQ/rDnKmIvjdhw7SlpSkfQEsitA
      af6Zd3Ana3HcmeC/n9pLW2+IzSvKuHjV+HntiZTG5/7tjwQjCVx2C1luO6sXFuL3ObnivCp+
      9ewBBkJxBkNxPnXjWl7a20JjxyBLKvw8/moDFlXGYVX5xu2XjLuoV1PnEPc9tpu/uWXDnE7x
      nmrGbAK1tLdTUlpKcXE+rc0t0+3TjFFTnkf3QISqolPnzNgsCtdurOaDly0jx+vAoirsbejm
      4lWVSJLEjZsXEU+m+cx715Gf7eaWS5bwV9evpblriM/dtJ6v/eXFbFlVyQMvHeJ//7iPtKaT
      SGmj0adkWud/ntrLx69bYxb+KWbMGiDY28qLr+wGWeWSK6/G5zjzjvC5XAMIIdANccY5Nbph
      EIomeXx7AwtKc9iw5PQ7k/yJWCLN3/74GUoDPuw2lWNdQS5dU8l1G6v56RN78Ge5uP6ChWbb
      f4o55f4AwtDRDEbb0MlYiKbmNjw5AaTkMFFNpSDXjc3pYSgYpjA/75wWwEQxhECCjAtrJJ7C
      abPw8NY6/FlOntpxhL/74Ca++ctX+Oc7Lpvx5La5wCkFkBjupWXIYGHF8U5Ya/MR4poALNgk
      DUOk6R1KsGzlChyqRCgUwuOZnjj5O43fvlBL/3AcSYJP3bB2pt2ZE4zbtnnykfuJ69DdEyLr
      wx8h32tHS6fI9QdoaDyKzeZGkzQsNgteN8QTSZyekWUxZNl8c02EzSvK+dlTe/nwFSvMZzhN
      jCsAh8OBbEgsqMoZjXkbWpK2tk5KyquQU2Eimorf56DI4SI0HEKSnG+Nmprt1olQEvDxj3+x
      ZabdmFOM2wTa/crzDBtOLtiwDpvlzHPh52IfwOTcZdx61puVxVBnI/sa2qbTHxOTaWXcJpDb
      l0vFvPnkmJtPmLyDGVMA255+hJYhgdVmY+Wa9dPtk4nJtDFmE2jtpktZUOYnHRumpat/un0y
      MZk2TrNRtnhrwdkzj+qYnWCTc4nT5DhI52o2tInJGWGOtpjMaTKa7qUloxxpasGbm4+UDBHV
      FQpy3FgdboLBMPmB3NMbMTGZRZymD3Aiuq6RTsY52tKGrNixSRpIOgPDSRYuWYLLqpi5QCbn
      FBnVAEYyypGWXmoWVHGksQ1DMlAsMhaLMrK8iE01UyFMzikyEkAikUQSabr7Q+R6rUQ1J/5s
      J8VlHoLBINJbKyiYiVwm5woZNYHOBDMManIuYb6qTeY0pgBM5jSmAEzmNKYATOY0pgBM5jSm
      AEzmNKYATOY0GQlACIOjjUdI69DT0crRlg4ioSCpdJq+/vE3SDYxma1kNBKsp5LEYlE0PcVg
      JI1NitPfHyEYTlG5YCFCCIQQGMa5taeAydwloxpAtTlwO0ZWfpbemisghEDXdUYmzwgmeWDZ
      xGRKyagGSEZDBMMxRM8gPqdMVHeSn+2muMzD0NAQPqcfWZbNXCCTcwYzF8hkTmO+qk3mNKYA
      TOY0pgBM5jSmAEzmNBMWwFBfF+1dfcSjYTRdZyg4O3aKNzHJhIltAmyk6ewLY5E09KSVRFIn
      r7Bskl0zMZl6JlgDGKgWKzaLBS2dpG8whN1mbuRscu4xsRpAtuJQ0kR1hcLcAMVlXvoHBnAV
      5U+yeyYmU8voQJimTXxH87cTDofNdYFMzhlGa4BUKjUpeTzpdJpkMnnWdgAMwzghrUIIMalr
      Dk2lfdP36bc9EfujAnA6J2cjDF3Xcblck2Lrz29msplK+6bv49ueysXTMvV9Yn2AaWKqk+qm
      0r7p+/Tbnoj9GR0IGx7o4UjzyB5kQz0dtPcOkoyGOHS4aczjQ4O9HDx4gP6hCE2H9jAUP3WT
      TRg6dQf2Eku/9UEqSlvP4JjHRoID1B48SM/AMG2NtfQOJ07rf2R4gPrG5tG/u9vaSI/+laK7
      ewBh6Bypr6W+sZno8CB1R5rHMnUSfZ3HaOkc+NOdcPDAAYxxbjcRHaa29iDt3QN0tzfS3hM8
      tXFhcPjQfsLxEW+PHqmj7nAj+pgHGzTWH6Ku4Six8NC4v83biQT7Odx4DIB0IsKBAwdoaukY
      /T4aDqMz0jxpPFxLXUMTsUiQ2sONp7Wtp5Ps23fgLV81amsP09/d/bbnfsLRNNQdGnn2oYEx
      n/2M1gA2l490z1EAopEEQSOGiEokkkk625rpC8bxup34sx3E8JGXlUdROsFwLI7XoRJNCbId
      41elwjBw2lWSGjgtgJ6kr6cHQ0sj0nHS8QixRIp5i1fi8mZTUpiiPxylwGOnI5om4LOf0n/V
      5sJI9Yz+PTQwQFTTKKsM0HGsj3gc8vNzmFdVxcG6JiRbISLdfUbPxuN10dcVA3JJDHWT1ARD
      oTChYAhZpFFknf7+IQoqaghkeagoKaS9P0xZoZeW1ijkZ41v3DBwOezEUzoeh4WhwSFK5i9m
      qKeD7p4+fFl59AcH8XhzmV9RRGVVFQfrjiBZisBIndZ31e5GT/UC0HKslQU1S2g9XEdrW4pI
      zCDY2UygeilVRflUVs2ntrYB1GIk/fS2DQFWRWbkXaCTiEcZHNBJyzp93QN4XE5sWX5S4SAV
      FaXMq6qi9nAjirUAke49yd6M1gB2+4kFzK5KDCcFdlXQ1ztAT1c7HqeV/Q1d5PrsDPZ2ENbs
      VBTlYbNaT2tfVi1Y1RGNC2GQTKWwWFTiiQTB4WFkq4N5JXnEkjqh/m76ozCvvBC77fS2/9x/
      wzDQgXQ8TioRJxJ768c0dA7VNVCzpAan/dSCOsG27fixLe3dWBSd9vZ24vE4w8FhInGNiuI8
      EimNeGiAtv4o1fPKsdttpzeuqNitx999NctW0NvSQEPTMQxJRkskKa6oJJ2IAIK6Q4dZVFOD
      w27nTFrub38uFkUilkiR0jRC4TgLqsoJ5BdSUpgPCOoP1VO9ePEZPxuL1YYiH/fCZXfQ2t5N
      /+Aw1Quriad1+poPgdUFwqCuvoGamkUnlbU/MYM1gKCz7Ri6rhOOp8kJBFCtCuG4gSppxEJB
      vHn5uNwuvB43igRCSERDA/Q7VAaG0hBvxfBWII/zq6QTUYaiGtaeDnzFuRzribBwQSWdLc24
      /AVkeZzYLTIWRSGWgGQkSO+AjVD/MCkphWG4kcczDvR0tqLrOsFIHD06RHZhKbkulbaOPoqL
      C5CREegoskxrSzseh4Su6wyF42R7HKd8Oi2tHehJQTKtU1A2D6/PR2g4SHhoAM3px6Ek2Xeo
      kQXLN6IbSYxkhK7eARLhftIapHUDizL2+01PJegLRpETPQR85Qz0duENlFKd46K5rRuX00JL
      czOLFiwEQ0NWZFpa28h2qWiaxuBwlBzf+IGOno4WdF1nOJqgrGoBzU1HCZRW4rNLHGtpp7i0
      mN6uXkqLcpAlmdaWNrI8FnRdZ2A4Su4pbMdCQyR1na6uPkoLcyguL8eX7SXHn8Ox5hbmzZtP
      NNiLJzcX9CSyLNPS2oHPIaHr2knPftZPiIlHIyg2J1bVzNt7O8l4lOFoEn9uzqRvY6VraYSs
      oM6BmX2zXgAmJlPJO1/iJianwBSAyawiFBwkEjt9CFoYOqFwBE1LMTg4SCQaI5E4/Xl/zqwe
      CDOZezzy8IOU5AeoOu8ihtuPUlIxD03ISHqSQH4+fZ0thNIW+uq2Uhf188Gr1/PAAw/w7utv
      4EhjE2UFOcR1BSOdZuGiKmoP1rNo6TLsFmXM65kCMJlVeLP9rFhawZt1jUhaiNqjW3GqYLM5
      uPrqS9n66l5ynAJZdXHBBZuwO+wEAgEK8rJ4fVeQro5WHDYbZTkW7n+onlyvhQhOLlhVPeb1
      TAGYzCrioQHeqLWxYH4pB45Gyfb5yBGDpAoXAApeB0R0KxW5TqzKSPjL5XKBJOF2uXDaVOx2
      Ox4vVKoOIok480oC417PjAKZzHIMdm5/laXnbcBpHbsZczaYAjCZ0/x/D3IwLXJ55gQAAAAA
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
